@startuml
title Github extraction mechanism

participant Main
participant GithubHttpClient
participant REST_API_Github
participant FileWriterJSON


Main -> GithubHttpClient : getRawDataJson(Url "/search/q=[searching_criterias]")
activate GithubHttpClient
GithubHttpClient -> REST_API_Github : GET "/search/q=[searching_criterias]"
deactivate GithubHttpClient
activate REST_API_Github
REST_API_Github --> GithubHttpClient : HTTP Response 200 OK + \n JSON Object and pagination
deactivate REST_API_Github
activate GithubHttpClient


GithubHttpClient --> GithubHttpClient : Get next page in headers

loop next-page != 1
        GithubHttpClient -> REST_API_Github : /search/q=[searching_criterias]&page=[page_number]
        deactivate GithubHttpClient
        activate REST_API_Github
            REST_API_Github --> GithubHttpClient : 200 OK + JSON Object and pagination
        deactivate REST_API_Github
        activate GithubHttpClient

        GithubHttpClient --> GithubHttpClient : Concatenates JSON Object received with the previous
        GithubHttpClient --> GithubHttpClient : Get X-Rate-Limit in headers
        alt X-Rate-Limit <= 0
            GithubHttpClient --> GithubHttpClient : Get X-RateLimit-Reset in headers
            GithubHttpClient --> GithubHttpClient : Compute time to sleep before next request
            GithubHttpClient --> GithubHttpClient : Thread Sleep([time compute])
            deactivate GithubHttpClient
        end
        activate GithubHttpClient
        GithubHttpClient --> GithubHttpClient : Get next page in headers
        activate GithubHttpClient
end
GithubHttpClient --> FileWriterJSON :  writeJSONObject(JSON object filtered)
note right
    Create and write
     JSON file
     with all the raw
     data provided
     by Github
end note
GithubHttpClient --> Main : Data from Github in JSON Object

deactivate GithubHttpClient


@enduml